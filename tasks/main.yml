---
#tasks for xymon client installation
- name: Include version-specific variables for CentOS/RHEL.
  include_vars: "RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_distribution == 'CentOS' or
    ansible_distribution == 'Red Hat Enterprise Linux' or
    ansible_distribution == 'RedHat'

- name: Include version-specific variables for Ubuntu.
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_distribution == 'Ubuntu'

- name: Include version-specific variables for Debian.
  include_vars: "{{ ansible_distribution|title }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == 'Debian'

- name: install required packages
  package:
    name: "{{ item }}"
    state: "{{ xymon_client_pkg_state }}"
  with_items:
    - "{{ xymon_client_pkg_list | to_nice_json }}"
  register: install_result
  until: install_result is success

- name: "Ensure group {{ xymon_client_user_group }} exists"
  group:
    name: "{{ xymon_client_user_group }}"
    state: present

- name: "add {{ xymon_client_user_group }} user to {{ xymon_client_user_group }} group"
  user:
    name: "{{ xymon_client_user_group }}"
    groups: "{{ xymon_client_user_group }}"
    append: true

- name: "ensure user {{ xymon_client_user_group }} has password-less sudo"
  lineinfile:
    path: "/etc/sudoers.d/user-{{ xymon_client_user_group }}"
    create: true
    state: present
    line: "{{ xymon_client_user_group }} ALL=(ALL) NOPASSWD: ALL"

- name: ensure XYMONUSER environment variable exists
  lineinfile:
    path: /etc/environment
    state: present
    line: 'XYMONUSER="{{ xymon_client_user_group }}"'

- name: download and extract xymon.client source
  unarchive:
    src: "https://iweb.dl.sourceforge.net/project/xymon/Xymon/{{ xymon_client_version }}/xymon-{{ xymon_client_version }}.tar.gz"
    dest: "{{ xymon_client_src_directory }}"
    owner: "{{ xymon_client_user_group }}"
    group: "{{ xymon_client_user_group }}"
    remote_src: yes

- name: remove Makefile if exists
  file:
    path: "{{ xymon_client_src_directory }}/xymon-{{ xymon_client_version }}/Makefile"
    state: absent

- name: configure xymon.client
  shell: "./configure --client"
  args:
    chdir: "{{ xymon_client_src_directory }}/xymon-{{ xymon_client_version }}"
    stdin: true
  become: true

- name: ovverwrite xymon.client Makefile
  copy:
    dest: "{{ xymon_client_src_directory }}/xymon-{{ xymon_client_version }}/Makefile"
    content: "{{lookup('template', 'Makefile')}}"
    owner: "{{ xymon_client_user_group }}"
    group: "{{ xymon_client_user_group }}"
    mode: "u=rwx,g=rw,o=r"

- name: building xymon.client
  make:
    chdir: "{{ xymon_client_src_directory }}/xymon-{{ xymon_client_version }}"
    target: install
  become: true

- name: get xymon.client machine hostname
  shell: hostname
  register: xymon_client_hostname

- name: set xymon.client file permissions
  file:
    path: "{{ xymon_client_directory }}"
    owner: "{{ xymon_client_user_group }}"
    group: "{{ xymon_client_user_group }}"
    mode: "u=rwx,g=rwx,o=r"
    recurse: yes

- name: copy xymon.client default configuration file
  copy:
    dest: "/etc/default/xymon-client"
    content: "{{lookup('template', 'xymon-client.default')}}"
    owner: "{{ xymon_client_user_group }}"
    group: "{{ xymon_client_user_group }}"
    mode: "u=rwx,g=r,o=r"

- name: copy xymon.client init configuration file
  copy:
    content: "{{lookup('template', 'xymon-client.init')}}"
    dest: "/etc/init.d/xymon-client"
    owner: "{{ xymon_client_user_group }}"
    group: "{{ xymon_client_user_group }}"
    mode: "u=rwx,g=rx,o=r"

- name: grant read access to log file
  file:
    path: /var/log/messages
    state: touch
    mode: "u=rw,g=r,o=r"

- name: start xymon.client and enable start on boot
  systemd:
    name: xymon-client
    state: started
    enabled: yes

- debug: msg='xymon client installation completed'